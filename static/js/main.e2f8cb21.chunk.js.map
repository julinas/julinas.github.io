{"version":3,"sources":["logo.svg","Keyboard.js","KeyboardMain.js","App.js","index.js"],"names":["module","exports","noteNameToNum","name","NaN","num","split","parseInt","noteNumToName","isNaN","ones","octave","Math","floor","note","splice","toString","join","Key","props","setSharp","value","setState","sharp","handleClick","e","state","active","notekey","midi","playChordNow","sharpNum","noteNum","toggleActive","setTimeout","bind","Fragment","id","this","data","className","onClickCapture","title","sharpkey","React","Component","Row","notes","notesNum","map","x","i","sharps","sharpsNum","zipped","shiftLeft","indices","Object","keys","length","current","createRef","charCodeAt","keyRef","key","ref","CheckQwerty","handleInputChange","event","useQwerty","showQwerty","type","checked","onChange","Keyboard","toggleShowQwerty","toggleSharp","target","rows","rowRef","setNotes","parsed","onClick","instruments","KeyboardApp","KeyboardMain","codes","document","onkeypress","code","getElementById","click","onkeydown","shift","keyboard","includes","onkeyup","Portfolio","class","itemscope","itemtype","itemprop","content","href","rel","src","alt","download","App","basename","process","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2f8cb21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport MIDISounds from 'midi-sounds-react';\nimport './Keyboard.css';\n\n// this doesn't use the full MIDI range\n// only 120 out of 127 possible notes - without the highest notes\nconst noteNameToNum = (name) => {\n\tif (name === \" \") return NaN;\n\n    // C C# D D# E F F# G G# A A# B\n    // 0 1  2 3  4 5 6  7 8  9 10 11\n    // Middle C is +5*12\n    let num = 0;\n    name = name.split('');\n    if (name[0] === \"C\") num += 0;\n    else if (name[0] === \"D\") num += 2;\n    else if (name[0] === \"E\") num += 4;\n    else if (name[0] === \"F\") num += 5;\n    else if (name[0] === \"G\") num += 7;\n    else if (name[0] === \"A\") num += 9;\n    else if (name[0] === \"B\") num += 11;\n            \n    let parsed = parseInt(name[1]);\n    num += parsed*12;\n    \n    if (name[2]) {\n\t    if (name[2] === \"#\") {\n\t        num += 1;\n\t    }\n\t    else if (name[2] === \"b\") {\n\t        num -= 1;\n\t    }\n\t}\n    return num;  \n}\n\nconst noteNumToName = (num) => {\n\tif (isNaN(num)) return \" \";\n\n    let ones = \"C C# D D# E F F# G G# A A# B\".split(\" \");\n    let octave = Math.floor(num / 12);\n    let letters = num % 12;\n    let note = ones[letters].split(\"\");\n    note.splice(1, 0, octave.toString());\n    note = note.join(\"\");\n    return note;\n}\n\nclass Key extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleActive = this.toggleActive.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.setSharp = this.setSharp.bind(this);\n        this.state = {\n            active: false,\n            sharp: false\n        };\n    }\n\n    setSharp = (value) => {\n        this.setState({sharp: value});\n    }\n    \n    handleClick = (e) => {\n        if (!this.state.active) {\n            if (this.props.notekey !== \" \") {\n            \tif (this.state.sharp) {\n                \tthis.props.midi.playChordNow(14, [this.props.sharpNum], 0.5);\n            \t}\n            \telse this.props.midi.playChordNow(14, [this.props.noteNum], 0.5);\n            }\n            this.toggleActive();\n            setTimeout(this.toggleActive, 100);\n        }\n    }\n    \n    toggleActive = () => {\n        this.setState({active: !this.state.active})\n    }\n\n    render() {        \n        return (\n            <React.Fragment>\n                <span\n                \tid={this.props.data}\n                    className={this.state.active ? 'key active' : 'key'} \n                    onClickCapture={this.handleClick}\n                >\n                \t<span\n                \t\ttitle={this.props.sharpkey}\n                \t\tclassName=\"sharp\"\n                \t/>  \n                   \t<span\n                \t    title={this.props.notekey}\n                \t    className=\"note\"\n                \t/>              \n                </span>\t\n            </React.Fragment>\n        );\n    }\n}\n\n// Row\nclass Row extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setSharp = this.setSharp.bind(this);\n        this.keys = {};\n    }\n    data = this.props.data.split('');\n    notes = this.props.notes.split(',');\n    notesNum = this.notes.map((x, i) => noteNameToNum(x));\n    sharps = this.notes.map((x, i) => noteNumToName(this.notesNum[i] + 1));\n    sharpsNum = this.sharps.map((x, i) => noteNameToNum(x));\n    zipped = this.data.map((x, i) => [x, this.notes[i], this.notesNum[i], this.sharps[i], this.sharpsNum[i]]);\n    className = this.props.shiftLeft ? \"row shiftLeft\" : \"row\";\n    \n    setSharp = (value) => {\n        let indices = Object.keys(this.keys);\n        for (let i = 0; i < indices.length; i++) {\n            this.keys[indices[i]].current.setSharp(value);\n        }\n    }\n\n    // using base note as id for key\n    createRef = (id) => {\n        id = id.charCodeAt(0);\n        let keyRef = React.createRef(id);\n        this.keys[id] = keyRef;\n        return keyRef;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={this.className}>\n                    {this.zipped.map(x => (\n                        <Key \n                            data={x[0]}\n                            key={x[0]}\n                            ref={this.createRef(x[0])} // for ref\n                            midi={this.props.midi}\n                            notekey={x[1]}\n                            noteNum={x[2]}\n                            sharpkey={x[3]}\n                            sharpNum={x[4]}\n                        />\n                    ))}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nclass CheckQwerty extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = {\n            useQwerty: false\n        };\n    }\n\n    handleInputChange = (event) => {\n    \tthis.setState({useQwerty: !this.state.useQwerty})\n    \tthis.props.showQwerty();\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\tUse QWERTY\n\t\t\t\t\t<input\n\t\t\t\t\t\tname=\"useQwerty\"\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={this.state.useQwerty}\n\t\t\t\t\t\tonChange={this.handleInputChange} />\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nclass Keyboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleSharp = this.toggleSharp.bind(this);\n        this.toggleShowQwerty = this.toggleShowQwerty.bind(this);\n        this.rows = {};\n        this.state = {\n        \tshowQwerty: false,\n            sharp: false\n        };\n    }\n\n    toggleShowQwerty = (event) => {\n    \tthis.setState({showQwerty: !this.state.showQwerty});\n    }\n\n    toggleSharp = (event) => {\n        if (event.target.id !== \"#\") {\n            return;\n        }\n        let value = !this.state.sharp;\n        this.setState({sharp: value});\n        let indices = Object.keys(this.rows);\n        for (let i = 0; i < indices.length; i++) {\n            this.rows[indices[i]].current.setSharp(value);\n        }\n    }\n\n    createRef = (id) => {\n        let rowRef = React.createRef(id);\n        this.rows[id] = rowRef;\n        return rowRef;\n    }\n    \n    /* recaculate name of notes */\n    setNotes = (notes) => {\n        // if no octave, set to 5th\n        // if no sharp or flat, set to \"n\"\n        notes = notes.split(\",\");\n        for (let i = 0; i < notes.length; i++) {\n            if (notes[i] !== \" \") {\n                let note = notes[i].split(\"\");\n                let parsed = parseInt(note[1]);\n                if (isNaN(parsed)) note.splice(1, 0, \"5\");\n                notes[i] = note.join(\"\");\n            }\n        }\n        return notes.join();\n    }\n    \n    // Moving MIDISounds to top level makes the application lighter, \n    // but it doesn't allow *exactly* simultaneous notes, so chords could be problematic (mostly fine, though)\n    render() {\n        return (\n            <React.Fragment>\n                <div \n                \tid=\"keyboard\"\n                \tclassName={(this.state.sharp ? 'sharp' : '') + \" \" + (this.state.showQwerty ? 'showQwerty' : '')}\n                \tonClick={this.toggleSharp}\n                >\n                \t<MIDISounds ref={(ref) => (this.midi = ref)}  instruments={[3]} />\n                    <Row ref={this.createRef(0)} midi={this.midi} data=\"`1234567890-=\" notes={this.setNotes(\"F8#,G8#,A8#,C9,D9,E9,F9#,G9#,A9#,G2#,A2#,C3,D3\")}/>\n                    <Row ref={this.createRef(1)} midi={this.midi} data=\"QWERTYUIOP[]\" notes={this.setNotes(\"A6#,G6#,D7,C6,F7#,G7#,A7#,G5#,D5,E8,E2,F2#\")}/>\n                    <Row ref={this.createRef(2)} midi={this.midi} data=\"ASDFGHJKL;'\" notes={this.setNotes(\"F4#,C5,F6#,F5#,C8,A5#,E7,D6,F3#,E5,G4#\")}/>\n                    <Row ref={this.createRef(3)} midi={this.midi} data=\"#ZXCVBNM,./\" notes={this.setNotes(\" ,E3,E6,G3#,A3#,C4,A4#,E4,D8,C7,D4\")} shiftLeft={true}/>\n                    <Row ref={this.createRef(4)} midi={this.midi} data=\" \" notes=\" \"/>\n                </div>\n                <CheckQwerty showQwerty={this.toggleShowQwerty}/>\n            </React.Fragment>\n        )\n    }\n\n    componentDidMount() {\n\t\tthis.setState(this.state);\n\t}\n}\n\nclass KeyboardApp extends React.Component {\n    render() {\n        return (\n            <div className=\"root\">\n                <div className=\"titlebox\">\n                    <div className=\"name\">\n                        musical notes on a keyboard\n                    </div>\n                    <div className=\"titleline\">\n                        Try this: (☉ is rhythm placeholder)\n                    </div>\n                    <div className=\"titleline\">\n                        /☉\" \" \"☉\"☉n☉no\"☉☉☉A☉AAA☉M☉A☉A\"/☉☉☉A☉AAA☉/mM☉MMM☉m/m☉mmmAMm/☉/☉/☉☉☉\n                    </div>\n                </div>\n\t            <Keyboard/>\n            </div>\n        );\n    }\n}\n\nexport default KeyboardApp;\n","import React from 'react';\nimport './KeyboardMain.css';\nimport KeyboardApp from './Keyboard';\n\nclass KeyboardMain extends React.Component {\n    componentDidMount() {\n        const codes = {\n            \"Backquote\": '`',\n            \"Digit1\": '1',\n            \"Digit2\": '2',\n            \"Digit3\": '3',\n            \"Digit4\": '4',\n            \"Digit5\": '5',\n            \"Digit6\": '6',\n            \"Digit7\": '7',\n            \"Digit8\": '8',\n            \"Digit9\": '9',\n            \"Digit0\": '0',\n            \"Minus\": '-',\n            \"Equal\": '=',\n            \"KeyQ\": 'Q',\n            \"KeyW\": 'W',\n            \"KeyE\": 'E',\n            \"KeyR\": 'R',\n            \"KeyT\": 'T',\n            \"KeyY\": 'Y',\n            \"KeyU\": 'U',\n            \"KeyI\": 'I',\n            \"KeyO\": 'O',\n            \"KeyP\": 'P',\n            \"BracketLeft\": '[',\n            \"BracketRight\": ']',\n            \"KeyA\": 'A',\n            \"KeyS\": 'S',\n            \"KeyD\": 'D',\n            \"KeyF\": 'F', \n            \"KeyG\": 'G', \n            \"KeyH\": 'H', \n            \"KeyJ\": 'J', \n            \"KeyK\": 'K', \n            \"KeyL\": 'L',\n            \"Semicolon\": ';',\n            \"Quote\": '\\'', \n            \"KeyZ\": 'Z', \n            \"KeyX\": 'X',\n            \"KeyC\": 'C', \n            \"KeyV\": 'V', \n            \"KeyB\": 'B', \n            \"KeyN\": 'N', \n            \"KeyM\": 'M', \n            \"Comma\": ',',\n            \"Period\": '.',\n            \"Slash\": '/',\n            \"Space\": ' '\n        }\n\n        const handleKeyPress = (event) => {\n            if (event.key) {\n                let key = codes[event.code];\n                key = document.getElementById(key);\n                if (key != null) {\n                    key.click();\n                }\n            }\n        }\n\n        const handleKeyDown = (event) => {\n            if (event.code) {\n                if (event.code === \"ShiftLeft\") {\n                    let shift = document.getElementById(\"\\#\");\n                    let keyboard = document.getElementById(\"keyboard\");\n                    if (shift != null && \n                        keyboard != null && \n                        !keyboard.className.includes(\"sharp\")) {\n                        shift.click();\n                    }\n                }\n            }\n        }\n\n        // There's really no way at all to prevent keyup from being triggered \n        // by another key. It's in the browser.\n        // Still need to propagate from the top because you can't \n        // check for e.shiftKey in the triggered click().\n        const handleKeyUp = (event) => {\n            if (event.code) {\n                if (event.code === \"ShiftLeft\") {\n                    let shift = document.getElementById(\"\\#\");\n                    let keyboard = document.getElementById(\"keyboard\");\n                    if (shift != null && \n                        keyboard != null && \n                        keyboard.className.includes(\"sharp\")) {\n                        shift.click();\n                    }\n                }\n            }\n        }\n\n        document.onkeypress = handleKeyPress;\n        document.onkeydown = handleKeyDown;\n        document.onkeyup = handleKeyUp;\n    }\n\n    render() {\n        return (\n            <KeyboardApp/>\n        )\n    }\n}\n\nexport default KeyboardMain;\n","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport KeyboardMain from './KeyboardMain';\n\n\nclass Portfolio extends React.Component {\n\tcomponentDidMount() {\n\t\tdocument.title = \"Asiiah Song\"\n\t}\n\n\trender() {\n    return (\n\t<div class=\"root\">\n\t<div class=\"titlebox\">\n\t    <div class=\"name\">\n\t        Asiiah Song\n\t    </div>\n\t    <div class=\"titleline\">\n\t    PhD student, Computational Media, UC Santa Cruz\n\t    \t<span itemscope itemtype=\"https://schema.org/Person\">\n\t    \t\t<a class=\"orchid\" itemprop=\"sameAs\" content=\"https://orcid.org/0000-0003-4803-4317\" href=\"https://orcid.org/0000-0003-4803-4317\" target=\"orcid.widget\" rel=\"me noopener noreferrer\">\n\t    \t\t\t<img class=\"orchid\" src=\"https://orcid.org/sites/default/files/images/orcid_16x16.png\" alt=\"ORCID iD icon\"/>\n\t    \t\t</a>\n\t    \t</span>\n\t    </div>\n\t</div>\n\t<div class=\"portfolio\">\n\t    <div class=\"floatinglinks\">    \n  \t        <div class=\"CV\">\n\t            <a href=\"CV.pdf\" target=\"_blank\" download>CV ⇩</a>\n\t        </div>\n\t        <div class=\"github\">\n\t            <a href=\"https://github.com/julinas\" target=\"_blank\">GitHub ⬀</a>\n\t        </div>\n\t    </div>\n\t    <div class=\"portfolio-item\">\n\t    \t<img src=\"Recipe.png\"/>\n\t    \t<a href=\"https://github.com/julinas/recipe/blob/master/README.md\" target=\"_blank\">\n\t    \t\tGenerative Recipes<br/>2018\n\t    \t</a>\n\t    </div>\n\t    <div class=\"portfolio-item\">\n\t    \t<img src=\"Townsim.png\"/>\n\t        <a href=\"https://github.com/AugmentedDesignLab/town-sim-py/blob/master/README.md\" target=\"_blank\">\n\t    \t\tTownSim<br/>2019\n\t    \t</a>\n\t    </div>\n\t    <div class=\"portfolio-item\">\n\t    \t<img src=\"Tarot.png\"/>\n\t        <a href=\"https://github.com/julinas/generative-tarot/blob/master/README.md\" target=\"_blank\">\n\t    \t\tGenerative Tarot<br/>2019\n\t    \t</a>\n\t    </div>\n\t    <div class=\"portfolio-item\">\n\t    \t<img src=\"iSAM.JPG\"/>\n\t        <a href=\"https://github.com/julinas/iSAM/blob/master/README.md\" target=\"_blank\">\n\t    \t\tiSAM<br/>2020\n\t    \t</a>\n\t    </div>\n\t    <div class=\"portfolio-item\">\n\t    \t<img src=\"keyboard.png\"/>\n\t        <a href=\"/#/notesonakeyboard\" target=\"_blank\">\n\t    \t\tnotes on a keyboard<br/>2020\n\t    \t</a>\n\t    </div>\n\t</div>\n\t</div>\n    );\n\t}\n}\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Portfolio}/>\n\t\t\t\t\t<Route path=\"/notesonakeyboard\" component={KeyboardMain}/>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t)\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}